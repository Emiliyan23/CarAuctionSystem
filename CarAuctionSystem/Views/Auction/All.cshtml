@model AllAuctionsQueryModel
@{
	ViewBag.Title = "All Auctions";
}

<h2 class="text-center row">@ViewBag.Title</h2>

<form method="get">
	<div class="row">
		<div class="form-group col-md-3 d-flex justify-content-between">
			<div class="form-group">
				<label asp-for="TransmissionType"></label>
				<select asp-for="TransmissionType" class="form-control">
					<option value="">All</option>
					@foreach (var transmissionType in Model.TransmissionTypes)
					{
						<option value="@transmissionType">@transmissionType</option>
					}
				</select>
			</div>
			<div class="form-group col-md-5">
				<label asp-for="CarBodyType"></label>
				<select asp-for="CarBodyType" class="form-control">
					<option value="">All</option>
					@foreach (var carBodyType in Model.CarBodyTypes)
					{
						<option value="@carBodyType">@carBodyType</option>
					}
				</select>
			</div>
		</div>
		<div class="form-group col-md-3">
			<label asp-for="SearchTerm"></label> <input asp-for="SearchTerm" class="form-control" placeholder="...">
		</div>
		<div class="form-group col-md-3">
			<div class="form-group">
				<label asp-for="Sorting"></label>
				<select asp-for="Sorting" class="form-control">
					<option value="0">Newest</option>
					<option value="1">Oldest</option>
					<option value="2">Lowest mileage</option>
				</select>
			</div>
		</div>
		<div class="col-md-3">
			<div class="form-group mt-4 p-2">
				<input type="submit" value="Search" class="btn btn-primary" />
			</div>
		</div>
	</div>
</form>

@if (!Model.Auctions.Any())
{
	<h2 class="text-center">No auctions found by the given criteria!</h2>
}

<div class="row">
	@foreach (var auction in Model.Auctions)
	{
		<partial name="_AuctionPartial" model="@auction"/>
	}
</div>

<script>
	function updateTimers() {
		var auctions = @Html.Raw(Json.Serialize(Model.Auctions));
		auctions.forEach(function (auction) {
			var endDateTime = new Date(auction.endDate); // Convert the end time to a JavaScript Date object
			var now = new Date(); // Get the current date and time

			// Check if the auction is closed (endDateTime is before now)
			if (endDateTime <= now) {
				// Auction is closed, show the "Auction is closed" message
				$("#timer-" + auction.id).text("Auction is closed");
			} else {
				var remainingTime = endDateTime - now;
				// Auction is still active, calculate the remaining time
				var days = Math.floor(remainingTime / (1000 * 60 * 60 * 24));
				remainingTime -= days * (1000 * 60 * 60 * 24);
				var hours = Math.floor(remainingTime / (1000 * 60 * 60));
				remainingTime -= hours * (1000 * 60 * 60);
				var minutes = Math.floor(remainingTime / (1000 * 60));
				remainingTime -= minutes * (1000 * 60);
				var seconds = Math.floor(remainingTime / 1000);

				// Format the remaining time as HH:MM:SS
				var formattedTime = ("0" + days).slice(-2) + ":" +
					("0" + hours).slice(-2) + ":" +
					("0" + minutes).slice(-2) + ":" +
					("0" + seconds).slice(-2);

				// Update the timer element with the remaining time
				$("#timer-" + auction.id).text(formattedTime);
			}
		});
	}

	// Update timers every second (1000 ms)
	setInterval(updateTimers, 1000);
</script>
