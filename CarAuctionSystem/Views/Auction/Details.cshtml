@model AuctionDetailsModel

@inject IUserService UserService
@{
	ViewBag.Title = "Auction Details";
	bool hasEnded = Model.EndDate < DateTime.UtcNow;
	bool userHasHighestBid = await UserService.IsHighestBidder(Model.Id, User.Id());
}

<h2 class="text-center">@ViewBag.Title</h2>

<div class="container" style="display:inline">
	<div class="row">
		<div class="card col border-0">
			<p style="font-size:25px;">
				<span>@Model.ModelYear @Model.Make @Model.Model</span>
			</p>
			<hr/>
			<p>Auction start date: <b>@Model.StartDate</b></p>
			<p>Auction end date: <b>@Model.EndDate</b></p>
			<p>Mileage: <b>@Model.Mileage km</b></p>
			<p>VIN: <b>@Model.Vin</b></p>
			<p>Engine Information: <b>@Model.EngineDetails</b></p>
			<p>Drivetrain: <b>@Model.Drivetrain</b></p>
			<p>Transmisson: <b>@Model.Transmission</b></p>
			<p>Fuel: <b>@Model.Fuel</b></p>
			<p>Body Style: <b>@Model.CarBody</b></p>
			<p>Interior color: <b>@Model.InteriorColor</b></p>
			<p>Exterior color: <b>@Model.ExteriorColor</b></p>
			<p></p>
			<div class="card" style="width: 18rem;">
				<div class="card-body">
					<h5 class="card-title">Seller Info</h5>
					<p class="card-text">
						Username:
						<a asp-controller="User" asp-action="Profile"
						   asp-route-id="@Model.SellerDetails.Id">@Model.SellerDetails.Username</a>
					</p>
					<p class="card-text">Email: @Model.SellerDetails.Email</p>
					<p class="card-text">Phone Number: @Model.SellerDetails.PhoneNumber</p>
				</div>
			</div>
		</div>
		<div class="card col border-0">
			<p style="font-size:25px;">Bid History:</p>
			<hr/>
			<ul class="list-group" id="bidList">
				@if (!Model.Bids.Any())
				{
					<li class="list-group-item">No bids placed for this auction.</li>
				}
				else
				{
					<li class="list-group-item">Bid count: @Model.Bids.Count</li>
					@foreach (var bid in Model.Bids)
					{
						<li class="list-group-item">
							@bid.BidTime
							<a asp-controller="User" asp-action="Profile"
							   asp-route-id="@bid.BidderId">@bid.BidderUsername</a> - @bid.BidAmount.ToString("C")
						</li>
					}
					@if (hasEnded)
					{
						<li class="list-group-item">Sold to @Model.Bids.Last().BidderUsername for @Model.Bids.Max(b => b.BidAmount).ToString("C")</li>
					}
				}
				@if (hasEnded)
				{
					<li class="list-group-item"><b>Auction has ended. Bids are closed.</b></li>
				}
				else
				{
					@if (User.Id() != Model.SellerDetails.Id)
					{
						if (userHasHighestBid == false)
						{
							<a asp-controller="Bid" asp-action="Bid" asp-route-id="@Model.Id"
							   asp-route-extraInfo="@Model.GetExtraInfo()" class="btn btn-success">Place Bid</a>
						}
					}
				}
			</ul>
		</div>
		<div class="col">
			<img class="card-img-top" style="width: 25rem;" src="@Model.ImageUrl" alt="Car Image">
			<p></p>
			@if (Model.Watchlist.Contains(Model.Id))
			{
				<button class="btn btn-info add-button d-none" onclick="addToWatchlist(@Model.Id)">
					Add to Watchlist
				</button>
				<button class="btn btn-danger remove-button" onclick="removeFromWatchlist(@Model.Id)">
					Remove from Watchlist
				</button>
			}
			else
			{
				<button class="btn btn-info add-button" onclick="addToWatchlist(@Model.Id)">
					Add to Watchlist
				</button>
				<button class="btn btn-danger remove-button d-none" onclick="removeFromWatchlist(@Model.Id)">
					Remove from Watchlist
				</button>
			}
		</div>
	</div>
</div>

<script src="~/lib/microsoft/signalr/dist/browser/signalr.js"></script>
<script src="~/js/bid.js"></script>

<script>
	var watchlist = @Html.Raw(Json.Serialize(Model.Watchlist));

	function addToWatchlist(auctionId) {
		var antiForgeryToken = $('input[name="__RequestVerificationToken"]').val();
		$.ajax({
			url: '/Watchlist/Add',
			method: 'POST',
			data: { id: auctionId, __RequestVerificationToken: antiForgeryToken  },
			success: function(response) {
				$('.add-button').addClass('d-none');
				$('.remove-button').removeClass('d-none');
				updateWatchlist(@Model.Id, true);
				toastr.info("Auction added to watchlist.");
			},
			error: function() {
				toastr.error('Error occurred while adding auction to watchlist.');
			}
		});
	}

	function removeFromWatchlist(auctionId) {
		var antiForgeryToken = $('input[name="__RequestVerificationToken"]').val();
		$.ajax({
			url: '/Watchlist/Remove',
			method: 'POST',
			data: { id: auctionId, __RequestVerificationToken: antiForgeryToken },
			success: function(response) {
				$('.remove-button').addClass('d-none');
				$('.add-button').removeClass('d-none');
				updateWatchlist(@Model.Id, false);
				toastr.info("Auction removed from watchlist.");
			},
			error: function() {
				toastr.error('Error occurred while removing auction from watchlist.');
			}
		});
	}
	
	function updateWatchlist(auctionId, isAdded) {
		if (isAdded) {
			watchlist.push(auctionId);
		} else {
			var index = watchlist.indexOf(auctionId);
			if (index > -1) {
				watchlist.splice(index, 1);
			}
		}
	}

</script>